name: "Migrate Variables & Secrets with Values"

on:
  workflow_dispatch:
    inputs:
      source_org:
        description: 'Source organization'
        required: true
      source_repo:
        description: 'Source repository (leave empty to migrate all)'
        required: false
      target_org:
        description: 'Target organization'
        required: true
      target_repo:
        description: 'Target repository'
        required: true
      scope:
        description: >-
          Comma-separated scopes:
          actionsenvironments,
          actionsreposecrets,
          actionsrepovariables,
          dependabotreposecrets,
          codespacesreposecrets,
          actionsenvsecrets,
          actionsenvvariables,
          actionsorgsecrets,
          actionsorgvariables,
          dependabotorgsecrets,
          codespacesorgsecrets
        required: true
      force:
        description: 'Overwrite existing values?'
        required: false
        default: 'false'

jobs:
  migrate:
    # Specify the exact runner labels to use
    runs-on: [self-hosted, Windows, X64]
    steps:
      - uses: actions/checkout@v3

      - name: Check GitHub CLI installation
        shell: powershell
        run: |
          try {
            $ghVersion = gh --version
            Write-Host "GitHub CLI is installed: $ghVersion"
          }
          catch {
            Write-Error "GitHub CLI is not installed. Please install it from https://cli.github.com/"
            exit 1
          }

      - name: Run Migration Script
        shell: powershell
        env:
          SOURCE_PAT: ${{ secrets.SOURCE_PAT }}
          TARGET_PAT: ${{ secrets.TARGET_PAT }}
        run: |
          # Ensure script directory exists
          $scriptDir = "${{ github.workspace }}/migration"
          if (!(Test-Path -Path $scriptDir)) {
            New-Item -ItemType Directory -Path $scriptDir -Force | Out-Null
          }
          
          # Save the script to the workspace
          $scriptPath = Join-Path $scriptDir "Migrate-GitHubVariables.ps1"
          
          # Create a unique temp directory for this run
          $tempSecretsDir = Join-Path $env:TEMP "GHSecretsMigration_$([DateTime]::Now.ToString('yyyyMMddHHmmss'))"
          Write-Host "Using temporary directory: $tempSecretsDir"
          
          # Print available environment variables for debugging (excluding secrets)
          Write-Host "Current directory: $PWD"
          Write-Host "GitHub workspace: ${{ github.workspace }}"
          
          # Execute the migration script
          & $scriptPath `
            -SourceOrg "${{ github.event.inputs.source_org }}" `
            -SourceRepo "${{ github.event.inputs.source_repo }}" `
            -TargetOrg "${{ github.event.inputs.target_org }}" `
            -TargetRepo "${{ github.event.inputs.target_repo }}" `
            -SourcePAT $env:SOURCE_PAT `
            -TargetPAT $env:TARGET_PAT `
            -Scope "${{ github.event.inputs.scope }}" `
            -TempSecretDir $tempSecretsDir `
            $(${{ github.event.inputs.force }} -eq 'true' ? "-Force" : "")
